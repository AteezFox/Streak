UPDATES_TO_IMPLEMENT
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
USER ENTITY:
package com.example.productapi.model;

import javax.persistence.*;

@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
public abstract class User {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String firstName;
    private String lastName;
    private String email;
    private String password;

    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "address_id")
    private Address address;

    // Getters and Setters
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
CEO ENTITY:
package com.example.productapi.model;

import jakarta.persistence.Entity;

@Entity
public class CEO extends User {

    // Add any CEO-specific fields if needed
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
ADMIN ENTITY:
package com.example.productapi.model;

import jakarta.persistence.Entity;

@Entity
public class Admin extends User {

    // Add any Admin-specific fields if needed
}

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
COURIER ENTITY:
package com.example.productapi.model;

import javax.persistence.Entity;

@Entity
public class Courier extends User {

    // Add any Courier-specific fields if needed
}

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
COMPANY ENTITY:
package com.example.productapi.model;

import jakarta.persistence.*;

@Entity
public class Company {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;

    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "ceo_id")
    private CEO ceo;

    @OneToMany(mappedBy = "company")
    private List<Product> products;

    // Getters and Setters
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
PRODUCT ENTITY:
package com.example.productapi.model;

import jakarta.persistence.*;

@Entity
public class Product {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;

    @Enumerated(EnumType.STRING)
    private Category category;

    private int price;
    private String image;  // Base64 image string

    @ManyToOne
    @JoinColumn(name = "company_id")
    private Company company;

    // Getters and Setters
}

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
ORDER ENTITY:
package com.example.productapi.model;

import jakarta.persistence.*;
import java.util.List;

@Entity
public class Order {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToMany
    @JoinTable(
        name = "order_product",
        joinColumns = @JoinColumn(name = "order_id"),
        inverseJoinColumns = @JoinColumn(name = "product_id")
    )
    private List<Product> products;

    private String date;

    @Enumerated(EnumType.STRING)
    private OrderStatus status;

    private int sumToPay;

    // Getters and Setters
}

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
ADDRESS ENTITY:
package com.example.productapi.model;

import jakarta.persistence.*;

@Entity
public class Address {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String street;
    private String city;
    private String state;
    private String zipCode;
    private String country;

    // Getters and Setters
}

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
USER DTO:
package com.example.productapi.dto;

public class UserDTO {

    private String firstName;
    private String lastName;
    private String email;
    private String password;
    private Long addressId;  // Just the ID of the address

    // Getters and Setters
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
PRODUCT DTO:
package com.example.productapi.dto;


public class ProductDTO {

    private String name;
    private String category;  // Will send string enum for simplicity
    private int price;
    private String image;
    private Long companyId;  // Company ID for linking products

    // Getters and Setters
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
ORDER DTO:
package com.example.productapi.dto;

import java.util.List;

public class OrderDTO {

    private List<Long> productIds;  // List of Product IDs
    private String date;
    private String status;  // Will send string enum for simplicity
    private int sumToPay;

    // Getters and Setters
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
COMPANY DTO:
package com.example.productapi.dto;

public class CompanyDTO {

    private String name;
    private Long ceoId;  // CEO's ID

    // Getters and Setters
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
USER SERVICE:
package com.example.productapi.service;

import com.example.productapi.model.User;
import com.example.productapi.model.Address;
import com.example.productapi.repository.UserRepository;
import com.example.productapi.repository.AddressRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private AddressRepository addressRepository;

    public User createUser(User user, Long addressId) {
        Address address = addressRepository.findById(addressId).orElseThrow(() -> new RuntimeException("Address not found"));
        user.setAddress(address);
        return userRepository.save(user);
    }

    public User updateUser(Long id, User user, Long addressId) {
        Address address = addressRepository.findById(addressId).orElseThrow(() -> new RuntimeException("Address not found"));
        user.setId(id);
        user.setAddress(address);
        return userRepository.save(user);
    }
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
PRODUCT SERVICE:
package com.example.productapi.service;

import com.example.productapi.model.Product;
import com.example.productapi.model.Company;
import com.example.productapi.repository.ProductRepository;
import com.example.productapi.repository.CompanyRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class ProductService {

    @Autowired
    private ProductRepository productRepository;

    @Autowired
    private CompanyRepository companyRepository;

    public Product createProduct(Product product, Long companyId) {
        Company company = companyRepository.findById(companyId).orElseThrow(() -> new RuntimeException("Company not found"));
        product.setCompany(company);
        return productRepository.save(product);
    }

    public Product updateProduct(Long id, Product product, Long companyId) {
        Company company = companyRepository.findById(companyId).orElseThrow(() -> new RuntimeException("Company not found"));
        product.setId(id);
        product.setCompany(company);
        return productRepository.save(product);
    }
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||